{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { presetColors, statusColors, isPresetColor, isStatusColor } from 'ng-zorro-antd/core/color';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { FormsModule } from '@angular/forms';\nfunction NzTagComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵlistener(\"click\", function NzTagComponent_span_1_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeTag($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = [\"*\"];\nlet NzTagComponent = /*#__PURE__*/(() => {\n  class NzTagComponent {\n    constructor(cdr, renderer, elementRef, directionality) {\n      this.cdr = cdr;\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.directionality = directionality;\n      this.isPresetColor = false;\n      this.nzMode = 'default';\n      this.nzChecked = false;\n      this.nzOnClose = new EventEmitter();\n      this.nzCheckedChange = new EventEmitter();\n      this.dir = 'ltr';\n      this.destroy$ = new Subject();\n    }\n    updateCheckedStatus() {\n      if (this.nzMode === 'checkable') {\n        this.nzChecked = !this.nzChecked;\n        this.nzCheckedChange.emit(this.nzChecked);\n      }\n    }\n    closeTag(e) {\n      this.nzOnClose.emit(e);\n      if (!e.defaultPrevented) {\n        this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);\n      }\n    }\n    clearPresetColor() {\n      const hostElement = this.elementRef.nativeElement;\n      // /(ant-tag-(?:pink|red|...))/g\n      const regexp = new RegExp(`(ant-tag-(?:${[...presetColors, ...statusColors].join('|')}))`, 'g');\n      const classname = hostElement.classList.toString();\n      const matches = [];\n      let match = regexp.exec(classname);\n      while (match !== null) {\n        matches.push(match[1]);\n        match = regexp.exec(classname);\n      }\n      hostElement.classList.remove(...matches);\n    }\n    setPresetColor() {\n      const hostElement = this.elementRef.nativeElement;\n      this.clearPresetColor();\n      if (!this.nzColor) {\n        this.isPresetColor = false;\n      } else {\n        this.isPresetColor = isPresetColor(this.nzColor) || isStatusColor(this.nzColor);\n      }\n      if (this.isPresetColor) {\n        hostElement.classList.add(`ant-tag-${this.nzColor}`);\n      }\n    }\n    ngOnInit() {\n      this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n        this.dir = direction;\n        this.cdr.detectChanges();\n      });\n      this.dir = this.directionality.value;\n    }\n    ngOnChanges(changes) {\n      const {\n        nzColor\n      } = changes;\n      if (nzColor) {\n        this.setPresetColor();\n      }\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }\n  NzTagComponent.ɵfac = function NzTagComponent_Factory(t) {\n    return new (t || NzTagComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n  };\n  NzTagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzTagComponent,\n    selectors: [[\"nz-tag\"]],\n    hostAttrs: [1, \"ant-tag\"],\n    hostVars: 10,\n    hostBindings: function NzTagComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NzTagComponent_click_HostBindingHandler() {\n          return ctx.updateCheckedStatus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"background-color\", ctx.isPresetColor ? \"\" : ctx.nzColor);\n        i0.ɵɵclassProp(\"ant-tag-has-color\", ctx.nzColor && !ctx.isPresetColor)(\"ant-tag-checkable\", ctx.nzMode === \"checkable\")(\"ant-tag-checkable-checked\", ctx.nzChecked)(\"ant-tag-rtl\", ctx.dir === \"rtl\");\n      }\n    },\n    inputs: {\n      nzMode: \"nzMode\",\n      nzColor: \"nzColor\",\n      nzChecked: \"nzChecked\"\n    },\n    outputs: {\n      nzOnClose: \"nzOnClose\",\n      nzCheckedChange: \"nzCheckedChange\"\n    },\n    exportAs: [\"nzTag\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"nz-icon\", \"\", \"nzType\", \"close\", \"class\", \"ant-tag-close-icon\", \"tabindex\", \"-1\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"close\", \"tabindex\", \"-1\", 1, \"ant-tag-close-icon\", 3, \"click\"]],\n    template: function NzTagComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, NzTagComponent_span_1_Template, 1, 0, \"span\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nzMode === \"closeable\");\n      }\n    },\n    dependencies: [i2.NgIf, i3.NzIconDirective],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  __decorate([InputBoolean()], NzTagComponent.prototype, \"nzChecked\", void 0);\n  return NzTagComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nlet NzTagModule = /*#__PURE__*/(() => {\n  class NzTagModule {}\n  NzTagModule.ɵfac = function NzTagModule_Factory(t) {\n    return new (t || NzTagModule)();\n  };\n  NzTagModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzTagModule\n  });\n  NzTagModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule, CommonModule, FormsModule, NzIconModule]\n  });\n  return NzTagModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzTagComponent, NzTagModule };\n//# sourceMappingURL=ng-zorro-antd-tag.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}