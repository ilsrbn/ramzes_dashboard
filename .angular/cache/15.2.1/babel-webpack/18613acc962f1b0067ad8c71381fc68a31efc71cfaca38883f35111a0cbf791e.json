{"ast":null,"code":"import { fromEvent } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let TodoService = /*#__PURE__*/(() => {\n  class TodoService {\n    constructor() {\n      this.todos = [];\n      this.loadState();\n      this.storageListenSub = fromEvent(window, 'storage').subscribe(event => {\n        if (event.key === 'todos') this.loadState();\n      });\n    }\n    ngOnDestroy() {\n      if (this.storageListenSub) this.storageListenSub.unsubscribe();\n    }\n    getTodos() {\n      return this.todos;\n    }\n    getTodo(id) {\n      return this.todos.find(t => t.id === id);\n    }\n    addTodo(todo) {\n      this.todos.push(todo);\n      this.saveState();\n    }\n    updateTodo(id, updatedTodoFields) {\n      const todo = this.getTodo(id);\n      Object.assign(todo, updatedTodoFields);\n      this.saveState();\n    }\n    deleteTodo(id) {\n      const index = this.todos.findIndex(t => t.id === id);\n      if (index == -1) return;\n      this.todos.splice(index, 1);\n      this.saveState();\n    }\n    saveState() {\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n    loadState() {\n      try {\n        const todosInStorage = JSON.parse(localStorage.getItem('todos'));\n        if (!todosInStorage) return;\n        this.todos.length = 0; // clear the todos array (while keeping the reference)\n        this.todos.push(...todosInStorage);\n      } catch (e) {\n        console.log('There was an error retrieving the todos from localStorage');\n        console.log(e);\n      }\n    }\n  }\n  TodoService.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)();\n  };\n  TodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: 'root'\n  });\n  return TodoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}