{"ast":null,"code":"import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ObserveElementDirective = /*#__PURE__*/(() => {\n  class ObserveElementDirective {\n    constructor(document,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, elementRef) {\n      var _a, _b;\n      this.document = document;\n      this.platformId = platformId;\n      this.elementRef = elementRef;\n      this.tracked = false;\n      if (isPlatformBrowser(this.platformId)) {\n        const options = {\n          root: this.document,\n          rootMargin: '0px',\n          threshold: 1.0\n        };\n        const intersectionCallback = entries => {\n          entries.forEach(entry => {\n            var _a;\n            if (entry.isIntersecting) {\n              if (entry.intersectionRatio === 1 && !this.tracked) {\n                (_a = this.appTrackable) === null || _a === void 0 ? void 0 : _a.call(this);\n                this.tracked = true;\n              }\n            }\n          });\n        };\n        this.observer = new IntersectionObserver(intersectionCallback, options);\n        const target = (_a = this.elementRef) === null || _a === void 0 ? void 0 : _a.nativeElement;\n        target && ((_b = this.observer) === null || _b === void 0 ? void 0 : _b.observe(target));\n      }\n    }\n    ngOnDestroy() {\n      var _a;\n      (_a = this.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n    }\n  }\n  ObserveElementDirective.ɵfac = function ObserveElementDirective_Factory(t) {\n    return new (t || ObserveElementDirective)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  ObserveElementDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ObserveElementDirective,\n    selectors: [[\"\", \"appTrackable\", \"\"]],\n    inputs: {\n      appTrackable: \"appTrackable\"\n    }\n  });\n  return ObserveElementDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}