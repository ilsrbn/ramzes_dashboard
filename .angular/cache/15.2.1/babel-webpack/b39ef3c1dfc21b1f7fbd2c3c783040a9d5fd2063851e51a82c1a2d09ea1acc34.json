{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nexport var IntersectionStatus = /*#__PURE__*/(() => {\n  (function (IntersectionStatus) {\n    IntersectionStatus[\"Visible\"] = \"Visible\";\n    IntersectionStatus[\"Pending\"] = \"Pending\";\n    IntersectionStatus[\"NotVisible\"] = \"NotVisible\";\n  })(IntersectionStatus || (IntersectionStatus = {}));\n  return IntersectionStatus;\n})();\nexport const fromIntersectionObserver = (element, config, debounce = 0) => new Observable(subscriber => {\n  const subject$ = new Subject();\n  const intersectionObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (isIntersecting(entry)) {\n        subject$.next({\n          entry,\n          observer\n        });\n      }\n    });\n  }, config);\n  subject$.subscribe(() => {\n    subscriber.next(IntersectionStatus.Pending);\n  });\n  subject$.pipe(debounceTime(debounce), filter(Boolean)).subscribe(({\n    entry,\n    observer\n  }) => __awaiter(void 0, void 0, void 0, function* () {\n    const isEntryVisible = yield isVisible(entry.target);\n    if (isEntryVisible) {\n      subscriber.next(IntersectionStatus.Visible);\n      observer.unobserve(entry.target);\n    } else {\n      subscriber.next(IntersectionStatus.NotVisible);\n    }\n  }));\n  intersectionObserver.observe(element);\n  return {\n    unsubscribe() {\n      intersectionObserver.disconnect();\n      subject$.unsubscribe();\n    }\n  };\n});\nfunction isVisible(element) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise(resolve => {\n      const observer = new IntersectionObserver(([entry]) => {\n        resolve(entry.isIntersecting);\n        observer.disconnect();\n      });\n      observer.observe(element);\n    });\n  });\n}\nfunction isIntersecting(entry) {\n  return entry.isIntersecting || entry.intersectionRatio > 0;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}